https://leetcode.com/problems/minimum-window-substring/

class Solution {
public:
    string minWindow(string s, string t) {
        int n = t.size(), m = s.size();
        if(n>m)return "";
        unordered_map<char,int>mp;
        for(int i=0 ; i<n ; i++){
            mp[t[i]]++;
        }
        n=m;
        int i=0,j=0, count = mp.size();
        int ansSize=INT_MAX;
        string ans = "";
        pair<int,int> p = {-1,-1};
        while(i<n){
            cout<<j<<" "<<i<<endl;
            if(mp.count(s[i])!=0){
                //cout<<j<<"_i:"<<i<<".i Match"<<endl;
                mp[s[i]]--;
                if(mp[s[i]]==0)count--;
            }
            if(count==0){
                //cout<<j<<"_i:"<<i<<". count=0"<<endl;
                if(ansSize > i-j+1){
                    ansSize = i-j+1;
                    p={j,i};
                }
                while(count==0){
                    if(mp.count(s[j])==0){
                        j++;
                        if(ansSize > i-j+1){
                            ansSize = i-j+1;
                            p={j,i};
                        }
                    }
                    else{
                        mp[s[j]]++;
                        if(mp[s[j]]>0){
                            j++;
                            count++;
                            break;
                        }
                        j++;
                        if(ansSize > i-j+1){
                            ansSize = i-j+1;
                            p={j,i};
                        }
                    }
                }
                //cout<<j<<"_i:"<<i<<". j shortened"<<endl;
            }   
            i++;
        }
        if(p.first!=-1 && p.second!=-1)ans = s.substr(p.first, p.second-p.first+1);
        return ans;
    }
};
